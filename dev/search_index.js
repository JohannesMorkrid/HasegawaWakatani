var documenterSearchIndex = {"docs":
[{"location":"#Hasegawa-Wakatani-Project-Documentation","page":"Hasegawa Wakatani Project Documentation","title":"Hasegawa Wakatani Project Documentation","text":"","category":"section"},{"location":"","page":"Hasegawa Wakatani Project Documentation","title":"Hasegawa Wakatani Project Documentation","text":"Welcome to the documentation page. ","category":"page"},{"location":"","page":"Hasegawa Wakatani Project Documentation","title":"Hasegawa Wakatani Project Documentation","text":"note: Quick-Glimpse Tutorial\nThis tutorial just offered a quick glimpse on Julia's built-in documentation system, make sure to read the docs for more.","category":"page"},{"location":"#HasegawaWakatani.Domain","page":"Hasegawa Wakatani Project Documentation","title":"HasegawaWakatani.Domain","text":"Domain(N, L)\nDomain(Nx, Ny, Lx, Ly)\n\nBox domain, that calculates spatial resolution under construction.\n\n# Contains\nLengths: ``Lx``, ``Ly`` (Float64)\\\nNumber of grid point: ``Nx``, ``Ny`` (Int64)\\\nSpatial resolution: ``dx``, ``dy`` (Float64)\\\nSpatial points: ``x``, ``y`` (LinRange)\n\n``dxᵢ = 2Lₓ÷(Nₓ-1)``\n\nSquare Domain can be constructed using:\\\n``Domain(N,L)``\n\nRectangular Domain can be constructed using:\\\n``Domain(Nx,Ny,Lx,Ly)``\n\n\n\n\n\n","category":"type"},{"location":"#HasegawaWakatani.ifftPlot","page":"Hasegawa Wakatani Project Documentation","title":"HasegawaWakatani.ifftPlot","text":"ifftPlot(args...; kwargs...)\nPlot the real part of the inverse Fourier transform (IFFT) of each argument that is a complex array. \nThis function is designed to handle multiple input arrays and plot them using the `plot` function \nfrom a plotting library such as Plots.jl. Non-complex arrays are plotted as-is.\n\n# Arguments\n- `args...`: A variable number of arguments. Each argument can be an array. If the array is of a complex type, \nits IFFT is computed, and only the real part is plotted. If the array is not complex, it is plotted directly.\n- `kwargs...`: Keyword arguments that are passed directly to the `plot` function to customize the plot.\n\n# Usage\nusing FFTW, Plots\n\n# Create some sample data\nx = rand(ComplexF64, 100)\\\ny = rand(100)\n\n# Plot the real part of the IFFT of `x` and `y` directly\nifftPlot(x, y, title=\"IFFT Plot Example\", legend=:topright)\n\n\n\n\n\n","category":"function"},{"location":"","page":"Hasegawa Wakatani Project Documentation","title":"Hasegawa Wakatani Project Documentation","text":"<!–@autodocs     Modules = [Domain, SpectralOperators]     Pages = [\"domain.jl\", \"spectralOperators.jl\"] Includes Domain, diagnostics, utilities, spectralSolve, spectralODEProblem and schemes –>","category":"page"}]
}
