var documenterSearchIndex = {"docs":
[{"location":"#Hasegawa-Wakatini-Project-Documentation","page":"Hasegawa Wakatini Project Documentation","title":"Hasegawa Wakatini Project Documentation","text":"","category":"section"},{"location":"","page":"Hasegawa Wakatini Project Documentation","title":"Hasegawa Wakatini Project Documentation","text":"Welcome to the documentation page. ","category":"page"},{"location":"","page":"Hasegawa Wakatini Project Documentation","title":"Hasegawa Wakatini Project Documentation","text":"note: Quick-Glimpse Tutorial\nThis tutorial just offered a quick glimpse on Julia's built-in documentation system, make sure to read the docs for more.","category":"page"},{"location":"","page":"Hasegawa Wakatini Project Documentation","title":"Hasegawa Wakatini Project Documentation","text":"    HasagawaWakatini\n    HasagawaWakatini.Helperfunctions.ifftPlot\n    Domain","category":"page"},{"location":"#HasagawaWakatini","page":"Hasegawa Wakatini Project Documentation","title":"HasagawaWakatini","text":"Includes Domain, Operators, Parameters and Timestepper\n\n\n\n\n\n","category":"module"},{"location":"#HasagawaWakatini.Helperfunctions.ifftPlot","page":"Hasegawa Wakatini Project Documentation","title":"HasagawaWakatini.Helperfunctions.ifftPlot","text":"ifftPlot(args...; kwargs...) Plot the real part of the inverse Fourier transform (IFFT) of each argument that is a complex array.  This function is designed to handle multiple input arrays and plot them using the plot function  from a plotting library such as Plots.jl. Non-complex arrays are plotted as-is.\n\nArguments\n\nargs...: A variable number of arguments. Each argument can be an array. If the array is of a complex type,  its IFFT is computed, and only the real part is plotted. If the array is not complex, it is plotted directly.\nkwargs...: Keyword arguments that are passed directly to the plot function to customize the plot.\n\nUsage\n\nusing FFTW, Plots\n\nCreate some sample data\n\nx = rand(ComplexF64, 100)\ny = rand(100)\n\nPlot the real part of the IFFT of x and y directly\n\nifftPlot(x, y, title=\"IFFT Plot Example\", legend=:topright)\n\n\n\n\n\n","category":"function"},{"location":"#HasagawaWakatini.Helperfunctions.Domain","page":"Hasegawa Wakatini Project Documentation","title":"HasagawaWakatini.Helperfunctions.Domain","text":"Box domain, that calculates spatial resolution under construction.\n\nContains\n\nLengths: Lx, Ly (Float64)\nNumber of grid point: Nx, Ny (Int64)\nSpatial resolution: dx, dy (Float64)\nSpatial points: x, y (LinRange)\n\ndxᵢ = 2Lₓ(Nₓ-1)\n\nSquare Domain can be constructed using:\nDomain(NL)\n\nRectangular Domain can be constructed using:\nDomain(NxNyLxLy)\n\n\n\n\n\n","category":"type"},{"location":"","page":"Hasegawa Wakatini Project Documentation","title":"Hasegawa Wakatini Project Documentation","text":"    Modules = [Operators, Timestepper]\n    Pages = [\"Operators.jl\",\"Timestepper.jl\"]","category":"page"},{"location":"#HasagawaWakatini.Operators.Laplacian!-NTuple{4, Any}","page":"Hasegawa Wakatini Project Documentation","title":"HasagawaWakatini.Operators.Laplacian!","text":"Non-allocating function\n\ndn - change in field\nn - the current field\nK - pre allocated K = -(kx^2 + ky^2)\n\n\n\n\n\n","category":"method"},{"location":"#HasagawaWakatini.Operators.Laplacian-Tuple{Any, Any, Any}","page":"Hasegawa Wakatini Project Documentation","title":"HasagawaWakatini.Operators.Laplacian","text":"Laplacian Operator\n\nn - current field a - frequencies (parameter) t - time (not used)\n\n\n\n\n\n","category":"method"},{"location":"#HasagawaWakatini.Operators.∇-Tuple{Any, Any, Any}","page":"Hasegawa Wakatini Project Documentation","title":"HasagawaWakatini.Operators.∇","text":"Short hand notation for laplacian Operator\n\nn - current field a - frequencies (parameter) t - time (not used)\n\n\n\n\n\n","category":"method"}]
}
